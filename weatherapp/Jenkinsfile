pipeline {
    agent {
        label 'production'
    }
    environment {
        DOCKERHUB_CREDENTIALS=credentials('Dockerhub')
    }
    stages {
        stage('Build-auth') {
            agent {
                docker {
                    image 'golang:alpine'
                    label 'production'
                    args '-u root' // Set the user to root
                }
            }
            steps {
                echo 'Building...'
                script {
                    // Add your build commands here
                    sh '''
                        id
                        cd weatherapp/auth/src/main
                        go build
                        cd -
                        ls -la
                    '''
                }
            }
        }

        stage('Test-ui') {
            agent {
                docker {
                    image 'node:17'
                    label 'production'
                    args '-u root' // Set the user to root
                }
            }
            steps {
                echo 'Testing...'
                script {
                    // Add your build commands here
                    sh '''
                        id
                        cd weatherapp/UI
                        npm run
                    '''
                }
            }
        }

        stage('test-weather') {
            agent {
                docker {
                    image 'python:3.8-slim-buster'
                    label 'production'
                    args '-u root' // Set the user to root
                }
            }
            steps {
                echo 'testing weather...'
                script {
                    // Add your build commands here
                    sh '''
                        id
                        cd weatherapp/weather
                        pip3 install -r requirements.txt
                    '''
                }
            }
        }

        stage('SonarQube analysis') {
            agent {
                docker {
                    image 'sonarsource/sonar-scanner-cli:4.7.0'
                }
            }
            environment {
                CI = 'true'
                scannerHome = '/opt/sonar-scanner'
            }
            steps {
                withSonarQubeEnv('sonarqube') {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }
        stage('Login to Docker') {
            steps {
                script {
                    // Docker login
                    withCredentials([usernamePassword(credentialsId: 'Dockerhub', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
                    }
                }
            }
        }

        stage('Build and Push auth') {
            steps {
                sh '''
                cd $WORKSPACE/weatherapp/auth
                docker build -t edjiguimkoudre8/adele93-auth:${BUILD_NUMBER} .
                docker push edjiguimkoudre8/adele93-auth:${BUILD_NUMBER}
                '''
            }
        }
        stage('Build and Push UI') {
            steps {
                sh '''
               cd $WORKSPACE/weatherapp/UI
                docker build -t edjiguimkoudre8/adele93-ui:${BUILD_NUMBER} .
                docker push edjiguimkoudre8/adele93-ui:${BUILD_NUMBER}
                '''
            }
        }
        stage('Build and Push weather') {
            steps {
                sh '''
                cd $WORKSPACE/weatherapp/weather
                docker build -t edjiguimkoudre8/adele93-weather:${BUILD_NUMBER} .
                docker push edjiguimkoudre8/adele93-weather:${BUILD_NUMBER}
                '''
            }
        }
    }
}

